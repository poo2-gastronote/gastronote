package view;

import model.Ingrediente;
import model.Receita;
import controller.IngredienteController;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FormIngrediente extends javax.swing.JFrame {
    private static FormIngrediente formIngrediente;
    private Ingrediente ingrediente;
    
    public FormIngrediente() {
        initComponents();
    }
    
    public static FormIngrediente getFormIngrediente(){
        if(formIngrediente == null){
            formIngrediente = new FormIngrediente();
        } 
        return formIngrediente;
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btIngred = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabIngred = new javax.swing.JTable();
        labelNomeIngred = new javax.swing.JLabel();
        txfieldNomeIngred = new javax.swing.JTextField();
        labelQuant = new javax.swing.JLabel();
        txfieldQuant = new javax.swing.JTextField();
        comboboxUnidMedida = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btLimpar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btIngred.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        btIngred.setText("Adicionar Ingrediente");
        btIngred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIngredActionPerformed(evt);
            }
        });

        tabIngred.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "Quantidade", "Unidade de Medida"
            }
        ));
        jScrollPane2.setViewportView(tabIngred);

        labelNomeIngred.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelNomeIngred.setText("Nome do Ingrediente:");

        txfieldNomeIngred.setMinimumSize(new java.awt.Dimension(80, 23));
        txfieldNomeIngred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfieldNomeIngredActionPerformed(evt);
            }
        });

        labelQuant.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelQuant.setText("Quantidade:");

        comboboxUnidMedida.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        comboboxUnidMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gramas", "Ml", "Unidade", "Xícara", "Colher de sopa", "Colher de chá" }));
        comboboxUnidMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxUnidMedidaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Cadastro de Ingredientes");

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(13, 13, 13)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btLimpar)
                                                .addGap(18, 18, 18)
                                                .addComponent(btIngred))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(labelNomeIngred)
                                                .addGap(222, 222, 222)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txfieldNomeIngred, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(labelQuant)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txfieldQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(comboboxUnidMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btSair)
                                .addGap(14, 14, 14)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomeIngred)
                    .addComponent(txfieldNomeIngred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelQuant)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txfieldQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboboxUnidMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btIngred)
                    .addComponent(btLimpar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btSair)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btIngredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIngredActionPerformed
        cadastraIngrediente();
    }//GEN-LAST:event_btIngredActionPerformed

    private void txfieldNomeIngredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfieldNomeIngredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfieldNomeIngredActionPerformed

    private void comboboxUnidMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxUnidMedidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxUnidMedidaActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limparIngrediente();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed
    private Receita receitaAtual;

    public void setReceitaAtual(Receita receita) {
        this.receitaAtual = receita;
    }

    public void cadastraIngrediente() {
        ingrediente = new Ingrediente();

        ingrediente.setNome(txfieldNomeIngred.getText());
        try {
            ingrediente.setQuantidade(Double.parseDouble(txfieldQuant.getText()));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Apenas valores numéricos!", "ERRO", JOptionPane.ERROR_MESSAGE);
            txfieldQuant.setText("");
            txfieldQuant.requestFocus();
            return;
        }

        ingrediente.setUnidMedida(comboboxUnidMedida.getSelectedItem().toString());

        if (receitaAtual != null) {
            receitaAtual.getIngredientes().add(ingrediente);
            if(receitaAtual.getId() > 0) {
                IngredienteController ct = new IngredienteController();
                ct.inserirIngrediente(ingrediente, receitaAtual.getId());
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Receita ainda não cadastrada no banco!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Erro: Nenhuma receita em cadastro!", "Erro", JOptionPane.ERROR_MESSAGE);
        }

        JOptionPane.showMessageDialog(null, "Ingrediente adicionado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        limparIngrediente();
        listarTabIngred();
    }

    public void limparIngrediente() {
        txfieldNomeIngred.setText("");
        txfieldQuant.setText("");
        comboboxUnidMedida.setSelectedIndex(0);
    }
    
    public void limparTabelaIngredientes() {
        DefaultTableModel modeloIngred = (DefaultTableModel) tabIngred.getModel();
        modeloIngred.setRowCount(0);
    }

    public void listarTabIngred() {
        DefaultTableModel modeloIngred = (DefaultTableModel) tabIngred.getModel();
        modeloIngred.setRowCount(0); 

        if (receitaAtual != null && receitaAtual.getIngredientes() != null) {
            for (Ingrediente ing : receitaAtual.getIngredientes()) {
                modeloIngred.addRow(new Object[]{ing.getNome(), ing.getQuantidade(), ing.getUnidMedida()});
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhuma receita em cadastro ou sem ingredientes!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void sair(){
        int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?", "Saida", JOptionPane.YES_NO_OPTION);
        if(resp == 0){
            this.dispose();
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormIngrediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormIngrediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormIngrediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormIngrediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormIngrediente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btIngred;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSair;
    private javax.swing.JComboBox<String> comboboxUnidMedida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelNomeIngred;
    private javax.swing.JLabel labelQuant;
    private javax.swing.JTable tabIngred;
    private javax.swing.JTextField txfieldNomeIngred;
    private javax.swing.JTextField txfieldQuant;
    // End of variables declaration//GEN-END:variables
}